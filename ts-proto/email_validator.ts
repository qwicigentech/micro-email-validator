// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.181.1
//   protoc               v5.27.3
// source: email_validator.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices';
import { Observable } from 'rxjs';

export const protobufPackage = 'email_validator';

export interface Payload {
  email: string;
}

export interface ValidationResponse {
  queueKey: string;
}

export const EMAIL_VALIDATOR_PACKAGE_NAME = 'email_validator';

export interface EmailValidatorClient {
  validate(request: Payload): Observable<ValidationResponse>;
}

export interface EmailValidatorController {
  validate(
    request: Payload,
  ):
    | Promise<ValidationResponse>
    | Observable<ValidationResponse>
    | ValidationResponse;
}

export function EmailValidatorControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ['validate'];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(
        constructor.prototype,
        method,
      );
      GrpcMethod('EmailValidator', method)(
        constructor.prototype[method],
        method,
        descriptor,
      );
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(
        constructor.prototype,
        method,
      );
      GrpcStreamMethod('EmailValidator', method)(
        constructor.prototype[method],
        method,
        descriptor,
      );
    }
  };
}

export const EMAIL_VALIDATOR_SERVICE_NAME = 'EmailValidator';
